# Generated by Django 2.2.13 on 2020-07-07 05:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthenticationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='date/time when this row was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='date/time when this row was updated')),
                ('active', models.BooleanField(default=True, help_text='select if this record is currently active')),
                ('name', models.CharField(help_text='type of credential', max_length=16)),
                ('description', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FieldMapEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='date/time when this row was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='date/time when this row was updated')),
                ('active', models.BooleanField(default=True, help_text='select if this record is currently active')),
                ('src_field', models.CharField(max_length=32)),
                ('dst_field', models.CharField(max_length=32)),
                ('src_regex', models.CharField(blank=True, max_length=32, null=True)),
                ('dst_regex', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='date/time when this row was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='date/time when this row was updated')),
                ('active', models.BooleanField(default=True, help_text='select if this record is currently active')),
                ('name', models.CharField(help_text='name of service', max_length=32, unique=True)),
                ('uid', models.CharField(blank=True, max_length=32, null=True)),
                ('pwd', models.CharField(blank=True, max_length=32, null=True)),
                ('token', models.CharField(blank=True, max_length=64, null=True)),
                ('auth_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='syncmgr.AuthenticationType')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SyncEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='date/time when this row was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='date/time when this row was updated')),
                ('active', models.BooleanField(default=True, help_text='select if this record is currently active')),
                ('owner', models.CharField(max_length=128)),
                ('src_endpoint', models.URLField()),
                ('dst_endpoint', models.URLField()),
                ('src_schema', models.TextField()),
                ('dst_schema', models.TextField()),
                ('dst', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dst_service', to='syncmgr.Service')),
                ('field_map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='syncmgr.FieldMapEntry')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SyncEventResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='date/time when this row was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='date/time when this row was updated')),
                ('active', models.BooleanField(default=True, help_text='select if this record is currently active')),
                ('name', models.CharField(help_text='name of result', max_length=16)),
                ('description', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SyncEventStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='date/time when this row was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='date/time when this row was updated')),
                ('active', models.BooleanField(default=True, help_text='select if this record is currently active')),
                ('name', models.CharField(help_text='name of status', max_length=16)),
                ('description', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SyncSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='date/time when this row was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='date/time when this row was updated')),
                ('active', models.BooleanField(default=True, help_text='select if this record is currently active')),
                ('cron', models.CharField(help_text='schedule, in cron format, this sync entry should run', max_length=16)),
                ('description', models.CharField(blank=True, help_text='detail this cron schedule', max_length=32, null=True)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SyncEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='date/time when this row was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='date/time when this row was updated')),
                ('active', models.BooleanField(default=True, help_text='select if this record is currently active')),
                ('output', models.TextField(blank=True, null=True)),
                ('result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='syncmgr.SyncEventResult')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='syncmgr.SyncEventStatus')),
                ('sync_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='syncmgr.SyncEntry')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='syncentry',
            name='schedule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='syncmgr.SyncSchedule'),
        ),
        migrations.AddField(
            model_name='syncentry',
            name='src',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='src_service', to='syncmgr.Service'),
        ),
    ]
